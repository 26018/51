C51 COMPILER V9.59.0.0   LCD1602                                                           02/21/2020 17:48:24 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\LCD1602.obj
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE LCD1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\LCD1
                    -602.lst) TABS(2) OBJECT(.\Objects\LCD1602.obj)

line level    source

   1          #include "LCD1602.h"
   2          #include <string.h>
   3          #include "stdio.h"
   4          #include <stdlib.h>
   5          #include <math.h>
   6          
   7          #define u8 unsigned char
   8          #define u16 unsigned int
   9          
  10          char keydata = 0;
  11          
  12          /*------------------------------------------------
  13                           LCD1602读忙函数
  14          ------------------------------------------------*/
  15          void LCD1602_Wait(void)
  16          {
  17   1        uchar sta;
  18   1        LCD1602_Data   = 0xff;
  19   1        LCD1602_RS     = 0;
  20   1        LCD1602_RW     = 1;
  21   1        do
  22   1        {
  23   2          LCD1602_EN = 1;
  24   2          sta        = LCD1602_Data;
  25   2          LCD1602_EN = 0;
  26   2        }while(sta & 0x80);
  27   1      }
  28          /*------------------------------------------------
  29                          LCD1602写命令函数
  30          ------------------------------------------------*/
  31          void LCD1602_WriteCmd(uchar cmd)
  32          {
  33   1        LCD1602_Wait();
  34   1        LCD1602_RS  = 0;
  35   1        LCD1602_RW  = 0;
  36   1        LCD1602_Data= cmd;
  37   1        LCD1602_EN  = 1;
  38   1        LCD1602_EN  = 0;
  39   1      }
  40          /*------------------------------------------------
  41                           LCD1602写数据函数
  42          ------------------------------------------------*/
  43          void LCD1602_WriteDat(uchar dat)
  44          {
  45   1        LCD1602_Wait();
  46   1        LCD1602_RS  = 1;
  47   1        LCD1602_RW  = 0;
  48   1        LCD1602_Data= dat;
  49   1        LCD1602_EN  = 1;
  50   1        LCD1602_EN  = 0;
  51   1      }
  52          /*------------------------------------------------
  53                           LCD1602写地址函数
  54          ------------------------------------------------*/
C51 COMPILER V9.59.0.0   LCD1602                                                           02/21/2020 17:48:24 PAGE 2   

  55          void LCD1602_SetCursor(uchar x,uchar y)
  56          {
  57   1        uchar addr;
  58   1        if(y == 0)
  59   1          addr = 0x00 + x;
  60   1        else
  61   1          addr = 0x40 + x;
  62   1        LCD1602_WriteCmd(addr | 0x80);
  63   1      }
  64          /*------------------------------------------------
  65                           LCD1602写字符函数
  66          ------------------------------------------------*/
  67          void LCD1602_ShowByte(uchar x,uchar y,uchar byte)     //LCD1602_ShowByte(2,0,'b');
  68          {
  69   1        LCD1602_SetCursor(x,y);
  70   1        LCD1602_WriteDat(byte);
  71   1      }
  72          
  73          /*------------------------------------------------
  74                           LCD1602写字符串函数
  75          ------------------------------------------------*/
  76          void LCD1602_ShowStr(uchar x,uchar y,uchar *str)
  77          {
  78   1        LCD1602_SetCursor(x,y);
  79   1        while(*str != '\0')
  80   1        {
  81   2          LCD1602_WriteDat(*str++);
  82   2        }
  83   1      }
  84          /*------------------------------------------------
  85                            LCD1602初始化函数
  86          ------------------------------------------------*/
  87          void LCD1602_Init(void)
  88          {
  89   1        LCD1602_WriteCmd(0x38);
  90   1        LCD1602_WriteCmd(0x0c);
  91   1        LCD1602_WriteCmd(0x06);
  92   1        LCD1602_WriteCmd(0x01);
  93   1      }
  94          
  95          void delay(u16 i)
  96          {
  97   1        u8 k;
  98   1        while(i--)
  99   1        {
 100   2          for(k=0;k<100;k++);
 101   2        }
 102   1      }
 103          
 104          void  key_scanf(void)    //键盘函数
 105          {
 106   1        keydata =0;    //初始化
 107   1        while(keydata == 0)
 108   1        {
 109   2          u8 key_L, key_H;
 110   2          P2 = 0xf0;  // 1111 0000      //扫描行    这是键盘接口
 111   2          key_H = P2;
 112   2          
 113   2          if(key_H != 0xf0)
 114   2          {
 115   3            delay(20);
 116   3            key_H = P2 ;  //读状态
C51 COMPILER V9.59.0.0   LCD1602                                                           02/21/2020 17:48:24 PAGE 3   

 117   3            if(key_H != 0xf0)
 118   3            {
 119   4              P2 = 0x0f;
 120   4              key_L = P2;
 121   4              if(key_H == 0xe0)  //第一列的按键按下   1110 0000
 122   4              {
 123   5                switch (key_L)  //(key_H & 0xF0) | (key_L & 0x0F)
 124   5                {               // 0xE0 | 0x0E = 0xEE;
 125   6                  case 0x0e:keydata = 1; break; //第一行 
 126   6                  case 0x0d:keydata = 4; break; //第二行
 127   6                  case 0x0b:keydata = 7; break; //第三行
 128   6                  case 0x07:keydata = 15;break; //第四行
 129   6                }
 130   5              }
 131   4              if(key_H == 0xd0)  //第二列的按键按下   1101 0000
 132   4              {
 133   5                switch (key_L)
 134   5                {
 135   6                  case 0x0e:keydata = 2; break; //第一行
 136   6                  case 0x0d:keydata = 5; break; //第二行
 137   6                  case 0x0b:keydata = 8;break; //第三行
 138   6                  case 0x07:keydata = 10;break; //第四行
 139   6                }
 140   5              }
 141   4              if(key_H == 0xb0)  //第三列的按键按下
 142   4              {
 143   5                switch (key_L)
 144   5                {
 145   6                  case 0x0e:keydata = 3; break; //第一行
 146   6                  case 0x0d:keydata = 6; break; //第二行
 147   6                  case 0x0b:keydata = 9;break; //第三行
 148   6                  case 0x07:keydata = 16;break; //第四行
 149   6                }
 150   5              }
 151   4              if(key_H == 0x70)  //第四列的按键按下
 152   4              {
 153   5                switch (key_L)
 154   5                {
 155   6                  case 0x0e:keydata = 11; break; //第一行     A
 156   6                  case 0x0d:keydata = 12; break; //第二行      D
 157   6                  case 0x0b:keydata = 13;break; //第三行     C
 158   6                  case 0x07:keydata = 14;break; //第四行     F
 159   6                }
 160   5              }
 161   4              while(P2 != 0x0f);
 162   4            }
 163   3          }
 164   2        }
 165   1      }
 166          
 167          
 168          
 169          char sym[17] = {'\0',49,50,'3','4','5','6','7','8','9','0','+','-','*','/','=','.'};
 170          char get[20];
 171          char flag;
 172          
 173          float add(float num1,float num2)
 174          {
 175   1        return (num1+num2);
 176   1      }
 177          
 178          float dec(float num1,float num2)
C51 COMPILER V9.59.0.0   LCD1602                                                           02/21/2020 17:48:24 PAGE 4   

 179          {
 180   1        return (num1-num2);
 181   1      }
 182          
 183          float mul(float num1,float num2)
 184          {
 185   1        return (num1*num2);
 186   1      }
 187          
 188          float div(float num1,float num2)
 189          {
 190   1        return (num1/num2);
 191   1      }
 192          
 193          
 194          void main()
 195          {
 196   1        char i=0, w=0, x=0;    //循环变量
 197   1        float num1,num2;       //用于存储两个数字
 198   1        memset(get,'\0',20);   //用于清空数组
 199   1        
 200   1        LCD1602_Init();
 201   1        
 202   1        while(1)
 203   1        {
 204   2          key_scanf();
 205   2          
 206   2          if((1<=keydata && keydata<11) || keydata == 16)     //筛选数字以及小数点
 207   2          {
 208   3            get[w] = sym[keydata];             //保存键盘输入的字符
 209   3            w++;
 210   3          }
 211   2          else if(11<=keydata && keydata<=14)   //筛选四种算法
 212   2          {
 213   3            flag = keydata;         //flag记录算法种类
 214   3            num1 = atof(get);       //算出第一个数字    atof用于将字符串转化为浮点数
 215   3            memset(get,'\0',20);    //清空获取数字的数组
 216   3            w = 0;                  //重置循环变量
 217   3          }
 218   2          else if(keydata == 15)    //按下等于符号
 219   2          {
 220   3            float result;
 221   3            num2 = atof(get);             //获取第二个数字
 222   3            switch(flag)
 223   3            {
 224   4              case 11:result = add(num1,num2);break;    //加法
 225   4              case 12:result = dec(num1,num2);break;    //减法
 226   4              case 13:result = mul(num1,num2);break;    //乘法
 227   4              case 14:result = div(num1,num2);break;    //除法
 228   4            }
 229   3            memset(get,'\0',20);
 230   3            
 231   3            sprintf(get,"%f",result);       //浮点转化为字符串
 232   3            for(x=0;get[x]!='\0';x++)       //遍历打印
 233   3              LCD1602_ShowByte(x,1,get[x]);
 234   3          }
 235   2          LCD1602_ShowByte(i,0,sym[keydata]);   //显示键盘输入的字符
 236   2          i++;
 237   2        }
 238   1      }
 239          
 240          
C51 COMPILER V9.59.0.0   LCD1602                                                           02/21/2020 17:48:24 PAGE 5   

 241          
 242          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    860    ----
   CONSTANT SIZE    =      3    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     39      52
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
